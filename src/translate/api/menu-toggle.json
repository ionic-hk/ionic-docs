{
  "tag": "ion-menu-toggle",
  "encapsulation": "shadow",
  "readme": "# ion-menu-toggle\n\nThe MenuToggle component can be used to toggle a menu open or closed.\n\nBy default, it's only visible when the selected menu is active. A menu is active when it can be opened/closed. If the menu is disabled or it's being presented as a split-pane, the menu is marked as non-active and ion-menu-toggle hides itself.\n\nIn case it's desired to keep `ion-menu-toggle` always visible, the `autoHide` property can be set to `false`.\n",
  "docs": "The MenuToggle component can be used to toggle a menu open or closed.\n\nBy default, it's only visible when the selected menu is active. A menu is active when it can be opened/closed. If the menu is disabled or it's being presented as a split-pane, the menu is marked as non-active and ion-menu-toggle hides itself.\n\nIn case it's desired to keep `ion-menu-toggle` always visible, the `autoHide` property can be set to `false`.",
  "docsTags": [],
  "usage": {},
  "props": [
    {
      "name": "autoHide",
      "type": "boolean",
      "mutable": false,
      "attr": "auto-hide",
      "reflectToAttr": false,
      "docs": "Automatically hides the content when the corresponding menu is not active.\n\nBy default, it's `true`. Change it to `false` in order to\nkeep `ion-menu-toggle` always visible regardless the state of the menu.",
      "docsTags": [],
      "default": "true",
      "optional": false,
      "required": false
    },
    {
      "name": "menu",
      "type": "string | undefined",
      "mutable": false,
      "attr": "menu",
      "reflectToAttr": false,
      "docs": "Optional property that maps to a Menu's `menuId` prop.\nCan also be `start` or `end` for the menu side.\nThis is used to find the correct menu to toggle.\n\nIf this property is not used, `ion-menu-toggle` will toggle the\nfirst menu that is active.",
      "docsTags": [],
      "optional": true,
      "required": false
    }
  ],
  "methods": [],
  "events": [],
  "styles": [],
  "slots": []
}