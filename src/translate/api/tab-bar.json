{
  "tag": "ion-tab-bar",
  "encapsulation": "shadow",
  "readme": "# ion-tab-bar\n\nThe tab bar is a UI component that contains a set of [tab buttons](../tab-button). A tab bar must be provided inside of [tabs](../tabs) to communicate with each [tab](../tab).\n\n",
  "docs": "The tab bar is a UI component that contains a set of [tab buttons](../tab-button). A tab bar must be provided inside of [tabs](../tabs) to communicate with each [tab](../tab).",
  "docsTags": [],
  "usage": {
    "angular": "```html\n<ion-tabs>\n  <!-- Tab bar -->\n  <ion-tab-bar slot=\"bottom\">\n    <ion-tab-button tab=\"account\">\n      <ion-icon name=\"person\"></ion-icon>\n    </ion-tab-button>\n    <ion-tab-button tab=\"contact\">\n      <ion-icon name=\"call\"></ion-icon>\n    </ion-tab-button>\n    <ion-tab-button tab=\"settings\">\n      <ion-icon name=\"settings\"></ion-icon>\n    </ion-tab-button>\n  </ion-tab-bar>\n</ion-tabs>\n```",
    "javascript": "```html\n<ion-tabs>\n  <!-- Tab views -->\n  <ion-tab tab=\"account\"></ion-tab>\n  <ion-tab tab=\"contact\"></ion-tab>\n  <ion-tab tab=\"settings\"></ion-tab>\n\n  <!-- Tab bar -->\n  <ion-tab-bar slot=\"bottom\">\n    <ion-tab-button tab=\"account\">\n      <ion-icon name=\"person\"></ion-icon>\n    </ion-tab-button>\n    <ion-tab-button tab=\"contact\">\n      <ion-icon name=\"call\"></ion-icon>\n    </ion-tab-button>\n    <ion-tab-button tab=\"settings\">\n      <ion-icon name=\"settings\"></ion-icon>\n    </ion-tab-button>\n  </ion-tab-bar>\n</ion-tabs>\n```",
    "react": "```tsx\nimport React from 'react';\n\nimport { IonTabs, IonTabBar, IonTabButton, IonIcon } from '@ionic/react';\n\nconst Example: React.SFC<{}> = () => (\n\n  <IonTabs>\n    {/*-- Tab bar --*/}\n    <IonTabBar slot=\"bottom\">\n      <IonTabButton tab=\"account\">\n        <IonIcon name=\"person\" />\n      </IonTabButton>\n      <IonTabButton tab=\"contact\">\n        <IonIcon name=\"call\" />\n      </IonTabButton>\n      <IonTabButton tab=\"settings\">\n        <IonIcon name=\"settings\" />\n      </IonTabButton>\n    </IonTabBar>\n  </IonTabs>\n);\n\nexport default Example;\n```\n",
    "vue": "```html\n<template>\n  <ion-tabs>\n    <!-- Tab bar -->\n    <ion-tab-bar slot=\"bottom\">\n      <ion-tab-button tab=\"account\">\n        <ion-icon name=\"person\"></ion-icon>\n      </ion-tab-button>\n      <ion-tab-button tab=\"contact\">\n        <ion-icon name=\"call\"></ion-icon>\n      </ion-tab-button>\n      <ion-tab-button tab=\"settings\">\n        <ion-icon name=\"settings\"></ion-icon>\n      </ion-tab-button>\n    </ion-tab-bar>\n  </ion-tabs>\n</template>\n```"
  },
  "props": [
    {
      "name": "color",
      "type": "string | undefined",
      "mutable": false,
      "attr": "color",
      "reflectToAttr": false,
      "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
      "docsTags": [],
      "optional": true,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "optional": false,
      "required": false
    },
    {
      "name": "selectedTab",
      "type": "string | undefined",
      "mutable": false,
      "attr": "selected-tab",
      "reflectToAttr": false,
      "docs": "The selected tab component",
      "docsTags": [],
      "optional": true,
      "required": false
    },
    {
      "name": "translucent",
      "type": "boolean",
      "mutable": false,
      "attr": "translucent",
      "reflectToAttr": false,
      "docs": "If `true`, the tab bar will be translucent.",
      "docsTags": [],
      "default": "false",
      "optional": false,
      "required": false
    }
  ],
  "methods": [],
  "events": [],
  "styles": [
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "Background of the tab bar"
    },
    {
      "name": "--border",
      "annotation": "prop",
      "docs": "Border of the tab bar"
    },
    {
      "name": "--color",
      "annotation": "prop",
      "docs": "Color of the tab bar"
    }
  ],
  "slots": []
}